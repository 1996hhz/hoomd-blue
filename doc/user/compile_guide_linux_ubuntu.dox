/*!
\page page_compile_guide_linux_ubuntu Compiling HOOMD-blue in Ubuntu linux

\b Note: This documentation was written and tested in <b>Ubuntu 9.04</b>. It may not work for other
versions.

This page assumes that you have a standard terminal window open. Commands to run will
be indicated as below:
\code
 $ echo hello
hello
\endcode
" $ " indicates a shell prompt. As demonstrated above, if you type "echo hello", then you should
see the same output obtained above on the next line: "hello"

You must be an administrator to install software.

\section software_req_install_ubuntu_dev Development environment

Install g++, boost, python headers, zlib headers, and subversion.

\code
 $ sudo apt-get install g++ libboost-dev zlib1g-dev python-dev subversion
\endcode

Ubuntu 9.04 only offers CMake 2.6.2, which is too old to build hoomd. Download the latest
cmake-?.?.?-Linux-i386.sh from http://www.cmake.org/ .
Replace ?.?.? with the most current version. The following terminal command is an example
that downloads verison 2.8.3

\code
 $ wget http://www.cmake.org/files/v2.8/cmake-2.8.3-Linux-i386.sh
\endcode

Install CMake by executing
\code
 $ sudo bash cmake*.sh --prefix-dir=/usr/local --exclude-subdir
\endcode

\section software_req_install_ubuntu_cuda CUDA environment

Download the current version of the NVIDA CUDA toolkit from 
http://developer.nvidia.com/object/gpucomputing.html . The following terminal command is an example
that downloads version 3.0 for Ubuntu 9.04 x86_64

\code
 $ wget http://developer.download.nvidia.com/compute/cuda/3_0/toolkit/cudatoolkit_3.0_linux_64_ubuntu9.04.run
\endcode

Install the CUDA toolkit by executing
\code
 $ sudo bash cudatoolkit*.run
\endcode
and following the onscreen prompts. Accept the default installation directory.

Add CUDA into the executable and library search paths by creating the following files. Create
<tt>/etc/ld.so.conf.d/cuda.conf</tt> and add the following lines
\code
/usr/local/cuda/lib
/usr/local/cuda/lib64
\endcode
Then run 
\code
 $ ldconfig
\endcode

Create <tt>/etc/profile.d/cuda.sh</tt> and add the following lines
\code
if ! echo ${PATH} | /bin/grep -q /usr/local/cuda/bin ; then
	PATH=/usr/local/cuda/bin:${PATH}
fi
\endcode
You will need to logout and back in for the path setting to take effect.

Download the latest drivers for your GPU from http://www.nvidia.com The following terminal command
is an example that downloads version 260.19.21 for linux x86_64. If you do not have an NVIDIA GPU,
proceed to the section \ref software_req_install_centos_build.
\code
 $ wget http://us.download.nvidia.com/XFree86/Linux-x86_64/260.19.21/NVIDIA-Linux-x86_64-260.19.21.run
\endcode

To install the driver, you must exit first logout of your X-windows session. At the login screen,
press ctrl-alt-f1 to reach a text console. Login and execute the following commands
\code
 $ sudo /etc/init.d/gdm stop
 $ sudo bash NVIDIA-Linux-*.run
\endcode
and follow the onscreen prompts to install the driver. Reboot the computer to load the new driver
and re-enter the GUI login screen.
\code
 $ sudo shutdown now -r
\endcode

\section  software_req_install_ubuntu_build Compile hoomd

See \ref sec_build_linux_generic_compile for instructions on compiling hoomd.

*/




