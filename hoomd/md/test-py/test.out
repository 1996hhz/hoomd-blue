notice(2): This system is not compute exclusive, using local rank to select GPUs
HOOMD-blue is running on the following GPU(s):
Rank 0:  [0]            Tesla K20c  13 SM_3.5 @ 0.706 GHz, 5119 MiB DRAM
Rank 1:  [1]          Quadro K5000   8 SM_3.0 @ 0.706 GHz, 4095 MiB DRAM, DIS
test_walls.py:021  |          init.read_snapshot(snapshot)
HOOMD-blue is using domain decomposition: n_x = 1 n_y = 1 n_z = 2.
1 x 1 x 2 local grid on 1 nodes
notice(2): Group "all" created containing 2 particles
test_walls.py:023  |          all = group.all();
test_walls.py:024  |          md.integrate.mode_standard(dt=0.005);
test_walls.py:025  |          md.integrate.nve(all);
test_walls.py:021  |          init.read_snapshot(snapshot)
HOOMD-blue is using domain decomposition: n_x = 1 n_y = 1 n_z = 2.
1 x 1 x 2 local grid on 1 nodes
notice(2): Group "all" created containing 2 particles
test_walls.py:023  |          all = group.all();
test_walls.py:024  |          md.integrate.mode_standard(dt=0.005);
test_walls.py:025  |          md.integrate.nve(all);
test_walls.py:046  |          lj_wall = md.wall.lj(walls, r_cut=3.0);
test_walls.py:047  |          lj_wall.force_coeff.set('A', epsilon=1.0, sigma=1.0, alpha=1.0)
test_walls.py:048  |          run(1);
** starting run **
Time 00:00:00 | Step 1 / 1 | TPS 1.72043 | ETA 00:00:00
Average TPS: 1.72022
---------
** run complete **
test_walls.py:021  |          init.read_snapshot(snapshot)
HOOMD-blue is using domain decomposition: n_x = 1 n_y = 1 n_z = 2.
1 x 1 x 2 local grid on 1 nodes
notice(2): Group "all" created containing 2 particles
test_walls.py:023  |          all = group.all();
test_walls.py:024  |          md.integrate.mode_standard(dt=0.005);
test_walls.py:025  |          md.integrate.nve(all);
test_walls.py:063  |          lj_wall = md.wall.lj(walls, r_cut=3.0);
test_walls.py:064  |          lj_wall.force_coeff.set('A', epsilon=1.0, sigma=1.0, alpha=1.0)
test_walls.py:065  |          run(1);
** starting run **
Time 00:00:00 | Step 1 / 1 | TPS 2.00084 | ETA 00:00:00
Average TPS: 2.00058
---------
** run complete **
test_walls.py:021  |          init.read_snapshot(snapshot)
HOOMD-blue is using domain decomposition: n_x = 1 n_y = 1 n_z = 2.
1 x 1 x 2 local grid on 1 nodes
notice(2): Group "all" created containing 2 particles
test_walls.py:023  |          all = group.all();
test_walls.py:024  |          md.integrate.mode_standard(dt=0.005);
test_walls.py:025  |          md.integrate.nve(all);
test_walls.py:056  |          lj_wall = md.wall.lj(walls, r_cut=3.0);
test_walls.py:057  |          lj_wall.force_coeff.set('A', epsilon=1.0, sigma=1.0, alpha=1.0)
test_walls.py:058  |          run(1);
** starting run **
Time 00:00:00 | Step 1 / 1 | TPS 1.99265 | ETA 00:00:00
Average TPS: 1.99239
---------
** run complete **
test_walls.py:021  |          init.read_snapshot(snapshot)
HOOMD-blue is using domain decomposition: n_x = 1 n_y = 1 n_z = 2.
1 x 1 x 2 local grid on 1 nodes
notice(2): Group "all" created containing 2 particles
test_walls.py:023  |          all = group.all();
test_walls.py:024  |          md.integrate.mode_standard(dt=0.005);
test_walls.py:025  |          md.integrate.nve(all);
test_walls.py:037  |          lj_wall = md.wall.lj(walls, r_cut=3.0);
test_walls.py:038  |          lj_wall.force_coeff.set('A', epsilon=1.0, sigma=1.0, alpha=1.0)
test_walls.py:039  |          run(1);
** starting run **
Time 00:00:00 | Step 1 / 1 | TPS 2.00096 | ETA 00:00:00
Average TPS: 2.00068
---------
** run complete **
test_walls.py:073  |          self.s=init.create_random(N=100, box=data.boxdim(L=5));
HOOMD-blue is using domain decomposition: n_x = 1 n_y = 1 n_z = 2.
1 x 1 x 2 local grid on 1 nodes
notice(2): Group "all" created containing 100 particles
test_walls.py:074  |          updater=update.box_resize(L = 15, period=None);
test_walls.py:075  |          updater.set_params(scale_particles = False);
test_walls.py:096  |          lj = md.pair.lj(r_cut=2.5)
nlist.py:1056  |          hoomd.context.current.neighbor_list = cell();
test_walls.py:097  |          lj.pair_coeff.set('A', 'A', epsilon=1.0, sigma=1.0)
test_walls.py:098  |          run(100)
*Warning*: Starting a run without an integrator setnotice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 100
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: no
** starting run **
*Warning*: You are running without an integrator
Time 00:00:00 | Step 100 / 100 | TPS 213.825 | ETA 00:00:00
Average TPS: 213.787
---------
-- Neighborlist stats:
0 normal updates / 0 forced updates / 0 dangerous updates
n_neigh_min: 0 / n_neigh_max: 0 / n_neigh_avg: 0
shortest rebuild period: 100
-- Cell list stats:
Dimension: 0, 0, 0
** run complete **
test_walls.py:073  |          self.s=init.create_random(N=100, box=data.boxdim(L=5));
HOOMD-blue is using domain decomposition: n_x = 1 n_y = 1 n_z = 2.
1 x 1 x 2 local grid on 1 nodes
notice(2): Group "all" created containing 100 particles
test_walls.py:074  |          updater=update.box_resize(L = 15, period=None);
test_walls.py:075  |          updater.set_params(scale_particles = False);
test_walls.py:081  |          md.wall.lj(self.walls);
test_walls.py:073  |          self.s=init.create_random(N=100, box=data.boxdim(L=5));
HOOMD-blue is using domain decomposition: n_x = 1 n_y = 1 n_z = 2.
1 x 1 x 2 local grid on 1 nodes
notice(2): Group "all" created containing 100 particles
test_walls.py:074  |          updater=update.box_resize(L = 15, period=None);
test_walls.py:075  |          updater.set_params(scale_particles = False);
test_walls.py:103  |          lj_wall = md.wall.lj(self.walls, r_cut=3.0);
test_walls.py:104  |          lj_wall.force_coeff.set('A', epsilon=1.0, sigma=1.0, alpha=1.0)
test_walls.py:105  |          all = group.all();
test_walls.py:106  |          md.integrate.mode_standard(dt=0.005);
test_walls.py:107  |          md.integrate.nve(all);
test_walls.py:108  |          run(100);
** starting run **
Time 00:00:00 | Step 100 / 100 | TPS 163.627 | ETA 00:00:00
Average TPS: 163.611
---------
** run complete **
test_walls.py:073  |          self.s=init.create_random(N=100, box=data.boxdim(L=5));
HOOMD-blue is using domain decomposition: n_x = 1 n_y = 1 n_z = 2.
1 x 1 x 2 local grid on 1 nodes
notice(2): Group "all" created containing 100 particles
test_walls.py:074  |          updater=update.box_resize(L = 15, period=None);
test_walls.py:075  |          updater.set_params(scale_particles = False);
test_walls.py:085  |          lj_wall = md.wall.lj(self.walls);
test_walls.py:086  |          lj_wall.force_coeff.set('A', sigma=1.0, alpha=1.0)
test_walls.py:087  |          all = group.all();
test_walls.py:088  |          md.integrate.mode_standard(dt=0.005);
test_walls.py:089  |          md.integrate.nve(all);
case.py:135  |              callable_obj(*args, **kwargs)
**ERROR**:  (Rank 0): Particle type A is missing required coefficients
**ERROR**:  (Rank 0): Not all force coefficients are set
test_walls.py:073  |          self.s=init.create_random(N=100, box=data.boxdim(L=5));
HOOMD-blue is using domain decomposition: n_x = 1 n_y = 1 n_z = 2.
1 x 1 x 2 local grid on 1 nodes
notice(2): Group "all" created containing 100 particles
test_walls.py:074  |          updater=update.box_resize(L = 15, period=None);
test_walls.py:075  |          updater.set_params(scale_particles = False);
test_walls.py:112  |          lj_wall = md.wall.lj(self.walls, r_cut=3.0);
test_walls.py:113  |          lj_wall.force_coeff.set('A', epsilon=1.0, sigma=1.0, alpha=1.0)
test_walls.py:114  |          all = group.all();
test_walls.py:115  |          md.integrate.mode_standard(dt=0.005);
test_walls.py:116  |          md.integrate.nve(all);
case.py:135  |              callable_obj(*args, **kwargs)
**ERROR**:  (Rank 0): A number of walls greater than the maximum number allowed was specified in a wall force.
test_walls.py:140  |          self.s=init.read_snapshot(snap)
HOOMD-blue is using domain decomposition: n_x = 1 n_y = 1 n_z = 2.
1 x 1 x 2 local grid on 1 nodes
notice(2): Group "all" created containing 4 particles
test_walls.py:143  |          all = group.all();
test_walls.py:144  |          md.integrate.mode_standard(dt=0.0);
*Warning*: integrate.*: A timestep of less than 0.0 was specified
test_walls.py:145  |          md.integrate.nve(all);
test_walls.py:146  |          lj_wall=md.wall.lj(self.walls,r_cut=3.5)
test_walls.py:147  |          lj_wall.force_coeff.set('A', r_extrap=1.1, epsilon=1.0, sigma=1.0)
test_walls.py:148  |          run(5)
** starting run **
Time 00:00:00 | Step 5 / 5 | TPS 8.39084 | ETA 00:00:00
Average TPS: 8.38981
---------
** run complete **
test_walls.py:140  |          self.s=init.read_snapshot(snap)
HOOMD-blue is using domain decomposition: n_x = 1 n_y = 1 n_z = 2.
1 x 1 x 2 local grid on 1 nodes
notice(2): Group "all" created containing 4 particles
test_walls.py:143  |          all = group.all();
test_walls.py:144  |          md.integrate.mode_standard(dt=0.0);
*Warning*: integrate.*: A timestep of less than 0.0 was specified
test_walls.py:145  |          md.integrate.nve(all);
test_walls.py:146  |          lj_wall=md.wall.lj(self.walls,r_cut=3.5)
test_walls.py:147  |          lj_wall.force_coeff.set('A', r_extrap=1.1, epsilon=1.0, sigma=1.0)
test_walls.py:148  |          run(5)
** starting run **
Time 00:00:00 | Step 5 / 5 | TPS 8.2244 | ETA 00:00:00
Average TPS: 8.22347
---------
** run complete **
