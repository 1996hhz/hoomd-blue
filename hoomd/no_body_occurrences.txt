Communicator.cc:            if (h_body.data[idx] != NO_BODY)
CommunicatorGPU.cu:    if (d_body[idx] != NO_BODY)
DCDDumpWriter.cc:        else if (m_unwrap_rigid && snapshot.body[i] != NO_BODY)
GSDDumpWriter.cc:            if (snapshot.body[it->second] != NO_BODY)
ParticleData.cc:    \post \c body is allocated and given the devault value of type[i] = NO_BODY
ParticleData.cc:                if (ignore_bodies && snapshot.body[snap_idx] != NO_BODY)
ParticleData.cc:            if (ignore_bodies && snapshot.body[snap_idx] != NO_BODY)
ParticleData.cc:        h_body.data[idx] = NO_BODY;
ParticleData.cc:    body.resize(N,NO_BODY);
ParticleData.cc:    body.insert(body.begin()+i,n,NO_BODY);
ParticleData.cc:                    body[k] = (body[i] != NO_BODY ? j*old_size + body[i] : NO_BODY);
ParticleData.cuh:const unsigned int NO_BODY = 0xffffffff;
ParticleData.h:const unsigned int NO_BODY = 0xffffffff;
ParticleData.h:                if (h_body.data[i] != NO_BODY)
ParticleGroup.cc:    if (m_rigid && body != NO_BODY)
ParticleGroup.cc:    if (!m_rigid && body == NO_BODY)
deprecated/HOOMDDumpWriter.cc:            int out = (body == NO_BODY) ? -1 : (int)body;
deprecated/test/test_hoomd_xml.cc:        h_body.data[1] = NO_BODY;
deprecated/HOOMDInitializer.cc:        // handle -1 as NO_BODY
deprecated/HOOMDInitializer.cc:                m_body_array.push_back(NO_BODY);
deprecated/POSDumpWriter.cc:        if (m_unwrap_rigid && snap.body[j] != NO_BODY)
md/ConstraintEllipsoid.cc:        if (h_body.data[j] != NO_BODY)
md/NeighborListBinned.cc:                if (m_filter_body && body_i != NO_BODY)
md/PPPMForceCompute.cc:            if (ibody != NO_BODY) body_map.insert(std::make_pair(ibody,i));
md/test/test_neighborlist.cc:    h_pos.data[0].x = 0; h_pos.data[0].y = 0; h_pos.data[0].z = 0; h_pos.data[0].w = 0.0; h_body.data[0] = NO_BODY;
md/test/test_neighborlist.cc:    h_pos.data[5].x = 0; h_pos.data[5].y = 0; h_pos.data[5].z = 0; h_pos.data[5].w = 0.0; h_body.data[5] = NO_BODY;
md/ForceComposite.cc:                    if (snap.body[i] != NO_BODY)
md/ForceComposite.cc:                            snap.body[i] = NO_BODY;
md/ForceComposite.cc:                    if (snap.body[i] != NO_BODY)
md/ForceComposite.cc:                    assert(snap.body[i] == NO_BODY);
md/ForceComposite.cc:                    if (snap_out.body[i] != NO_BODY)
md/ForceComposite.cc:        // re-initialize, keeping particles with body != NO_BODY at this time
md/ForceComposite.cc:        if (central_tag == NO_BODY)
md/ZeroMomentumUpdater.cc:        if (h_body.data[i] == NO_BODY || h_body.data[i] == h_tag.data[i])
md/ZeroMomentumUpdater.cc:        if (h_body.data[i] == NO_BODY || h_body.data[i] == h_tag.data[i])
md/NeighborListTree.cc:                                if (m_filter_body && body_i != NO_BODY)
md/IntegrationMethodTwoStep.cc:            if (body != NO_BODY && body != tag)
md/NeighborListStencil.cc:                if (m_filter_body && body_i != NO_BODY && body_i == body_j) continue;
md/ForceCompositeGPU.cu:            mol_idx[m] = NO_BODY;
md/ForceCompositeGPU.cu:    if (mol_idx[m] != NO_BODY)
md/ForceCompositeGPU.cu:    if ((threadIdx.x & thread_mask) == 0 && mol_idx[m] != NO_BODY && central_idx[m] < N)
md/ForceCompositeGPU.cu:            mol_idx[m] = NO_BODY;
md/ForceCompositeGPU.cu:    if (mol_idx[m] != NO_BODY)
md/ForceCompositeGPU.cu:    if ((threadIdx.x & thread_mask) == 0 && mol_idx[m] != NO_BODY && central_idx[m] < N)
md/ForceCompositeGPU.cu:    if (central_idx == NO_BODY)
md/ForceCompositeGPU.cu:        return (body != NO_BODY) ? d_rtag[body] : NO_BODY;
md/ConstraintSphere.cc:        if (h_body.data[j] != NO_BODY)
test/test_pdata.cc:    UP_ASSERT(h_body.data[0] == NO_BODY);
test/test_pdata.cc:        UP_ASSERT(h_body.data[i] == NO_BODY);
