# $Id$
# $URL$
# Maintainer: joaander

#################################
## Optional static build
## ENABLE_STATIC is an option to control whether HOOMD is built as a statically linked exe or as a python module.
OPTION(ENABLE_STATIC "Link as many libraries as possible statically, cannot be changed after the first run of CMake" ON)
mark_as_advanced(ENABLE_STATIC)
if (ENABLE_STATIC)
    add_definitions(-DENABLE_STATIC)
endif(ENABLE_STATIC)

#################################
## Optional build with double size exclusion list
## LARGE_EXCLUSION_LIST is an option to control whether HOOMD will have extra
## exclusion lists to handle more complex molecules. Has some speed impact and
## thus is not on by default.
OPTION(LARGE_EXCLUSION_LIST "Increase the number of allowed exclusions from 4 to 16 per atom. Only needed for branched molecules with angles and dihedrals." OFF)
if (LARGE_EXCLUSION_LIST)
    add_definitions(-DLARGE_EXCLUSION_LIST)
endif(LARGE_EXCLUSION_LIST)

#################################
## Optionally enable documentation build
find_package(Doxygen)
if (DOXYGEN_FOUND)
# get the doxygen version
exec_program(${DOXYGEN_EXECUTABLE} ${HOOMD_SOURCE_DIR} ARGS --version OUTPUT_VARIABLE DOXYGEN_VERSION)
STRING(REGEX REPLACE "^([0-9]+)\\.[0-9]+\\.[0-9]+.*" "\\1" DOXYGEN_VERSION_MAJOR "${DOXYGEN_VERSION}")
STRING(REGEX REPLACE "^[0-9]+\\.([0-9])+\\.[0-9]+.*" "\\1" DOXYGEN_VERSION_MINOR "${DOXYGEN_VERSION}")
STRING(REGEX REPLACE "^[0-9]+\\.[0-9]+\\.([0-9]+).*" "\\1" DOXYGEN_VERSION_PATCH "${DOXYGEN_VERSION}")

if (DOXYGEN_VERSION_MAJOR GREATER 0 AND (DOXYGEN_VERSION_MINOR GREATER 4 AND DOXYGEN_VERSION_PATCH GREATER 5) OR (DOXYGEN_VERSION_MINOR GREATER 5))
OPTION(ENABLE_DOXYGEN "Enables building of documentation with doxygen" ON)
else (DOXYGEN_VERSION_MAJOR GREATER 0 AND (DOXYGEN_VERSION_MINOR GREATER 4 AND DOXYGEN_VERSION_PATCH GREATER 5) OR (DOXYGEN_VERSION_MINOR GREATER 5))
message(STATUS "Doxygen version less than 1.5.5, defaulting ENABLE_DOXYGEN=OFF")
OPTION(ENABLE_DOXYGEN "Enables building of documentation with doxygen" OFF)
endif (DOXYGEN_VERSION_MAJOR GREATER 0 AND (DOXYGEN_VERSION_MINOR GREATER 4 AND DOXYGEN_VERSION_PATCH GREATER 5) OR (DOXYGEN_VERSION_MINOR GREATER 5))

endif (DOXYGEN_FOUND)

################################
## thread safe compiling
if(WIN32)
    add_definitions(-D_MT)
elseif(UNIX)
    add_definitions(-D_REENTRANT)
endif(WIN32)

#################################
## On windows: we need winsock
if (WIN32)
    if(CMAKE_CL_64)
    find_library(WINSOCK_LIB WSock32 PATHS 
        $ENV{PLATFORMSDK_DIR}Lib/AMD64 "$ENV{PROGRAMFILES}/Microsoft Platform SDK/Lib/AMD64" 
        "$ENV{PROGRAMFILES}/Microsoft Visual Studio 8/VC/PlatformSDK/Lib/AMD64" 
        DOC "Path to WSock32.lib")
    else(CMAKE_CL_64)
    find_library(WINSOCK_LIB WSock32 PATHS
        $ENV{PLATFORMSDK_DIR}Lib "$ENV{PROGRAMFILES}/Microsoft Platform SDK/Lib" 
        "$ENV{PROGRAMFILES}/Microsoft Visual Studio 8/VC/PlatformSDK/Lib"
        "$ENV{PROGRAMFILES}/Microsoft Platform SDK for Windows Server 2003 R2/Lib"
        DOC "Path to WSock32.lib")
    endif(CMAKE_CL_64)
endif (WIN32)

if (WINSOCK_LIB)
mark_as_advanced(WINSOCK_LIB)
endif (WINSOCK_LIB)

##################################
## SSE and floating point compilation options
# msvc 2005 doesn't define __SSE__ or __SSE2__, so we define them for it
# this of course assumes that the machine is capable of SSE2.... which almost any windows machine will be these days

if (WIN32)
add_definitions(-D__SSE__ -D__SSE2__)
endif (WIN32)

# allow user to compile code with single instead of double precision
# single precision option
option(SINGLE_PRECISION "Use single precision math" ON)

##################################
## find the threads library
find_package(Threads)

#################################
## setup python library and executable
# find the python interpreter, first
find_package(PythonInterp REQUIRED)
# find the python libraries to link to
find_package(PythonLibs REQUIRED)

include_directories(${PYTHON_INCLUDE_PATH})

#################################
## hide some unit testing stuff users don't really need to see
mark_as_advanced(DART_TESTING_TIMEOUT)
