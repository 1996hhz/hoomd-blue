/*! \page page_example_scripts Example Scripts

\section sec_example_dump Example 1: Using dump files

This simple example is a simple adaptation of the quick start script.
It performs a simulation of a Lennard-Jones liquid, dumping snapshots 
of the system every 100 time steps.
\code
from hoomd_script import *

# create 1000 random particles of name A
init.create_random(N=1000, phi_p=0.01, name='A')

# specify Lennard-Jones interactions between particle pairs
lj = pair.lj(r_cut=3.0)
lj.pair_coeff.set('A', 'A', epsilon=1.0, sigma=1.0, alpha=1.0)

# integrate at constant temperature
integrate.nvt(dt=0.005, T=1.2, tau=0.5)

# dump a .mol2 file for the structure information
dump.mol2(filename='example1.mol2')

# dump a .dcd file for the trajectory
dump.dcd(filename='example1.dcd', period=100)

# run 10,000 time steps
run(10e3)
\endcode

Running this quick simulation should result in two output files being generated
in the current working directory: \c example.mol2 and \c example.dcd. The 
\c .mol2 file generated by \link hoomd_script.dump.mol2 dump.mol2 \endlink 
contains the particle names and coordinates at timestep 0. If there were
any bonds specified, they would be included too. VMD or other applications
can read in the \c .mol2 to obtain this information.

\c dump.dcd includes snapshots of the system state (particle position
coordinates only) written every 100 time steps. This file can be loaded into
visualization software such as VMD and played as a movie or read for
analysis purposes.

If you have VMD installed, you can load up the entire simulation trajectory
by running
\code
vmd example1.mol2 example1.dcd
\endcode
on the command line.

<hr>

\section sec_example_imd Example 2: Using IMD

Here is the same simulation again, this time configured for real-time display
in VMD using the IMD interface.
\code
from hoomd_script import *

# create 1000 random particles of name A
init.create_random(N=1000, phi_p=0.01, name='A')

# specify Lennard-Jones interactions between particle pairs
lj = pair.lj(r_cut=3.0)
lj.pair_coeff.set('A', 'A', epsilon=1.0, sigma=1.0, alpha=1.0)

# integrate at constant temperature
integrate.nvt(dt=0.005, T=1.2, tau=0.5)

# dump a .mol2 file for the structure information
dump.mol2(filename='example2.mol2')

# setup the IMD server
analyze.imd(port=54321, period=500)

# run a very long time so the simulation can be watched in VMD
run(1e9)
\endcode
Start the simulation running in HOOMD, then load up VMD. Inside VMD, create
a new molecule and load the file \c example2.mol2 generated at the beginning
of the simulation. Then go to the VMD command window and run the commnand
\code
imd connect localhost 54321
\endcode
The particles in the display window should begin moving. The display
is of the current state of the simulation, updated in \b real-time.

<hr>

\section sec_example_polygen Example 3: Using the polymer generator


\code
from hoomd_script import *
import math

# parameters
phi_P = 0.25

# generate polymer system
polymer1 = dict(bond_len=1.2, type=['A']*6 + ['B']*7 + ['A']*6, bond="TODO", count=600)
N = len(polymer1['type']) * polymer1['count'];
L = math.pow(math.pi * N / (6.0 * phi_P), 1.0/3.0);
init.create_random_polymers(box=hoomd.BoxDim(L), polymers=[polymer1], separation=dict(A=0.45, B=0.45), seed=52);

# force field setup
bond.harmonic(K=330.0, r0=0.84)
lj = pair.lj(r_cut=3.0)
lj.pair_coeff.set('A', 'A', epsilon=1.0, sigma=1.0, alpha=0.0)
lj.pair_coeff.set('A', 'B', epsilon=1.0, sigma=1.0, alpha=0.0)
lj.pair_coeff.set('B', 'B', epsilon=1.0, sigma=1.0, alpha=1.0)

dump.mol2(filename="polymers.mol2");
dump.dcd(filename="dump.dcd", period=100000);

# integrate NVT for a bunch of time steps
integrate.nvt(dt=0.005, T=1.2, tau=0.5)
run(5000000)
\endcode

*/