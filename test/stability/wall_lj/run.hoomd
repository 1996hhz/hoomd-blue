from hoomd_script import *
import sys;
import math;

#########################
# test the lj wall forces by running a large lj liquid sim for a long time
# there are four types of particles that should phase separate over time
# additionally, this tests the constant force by applying gravity.
# Not only will the particles separate, but they will fall to the bottom of 
# the box

# by default, the test will run for roughly 2 hours on a Tesla C870
# if "endurance" is passed as the first argument on the command line, it will
# run for about 24 hours instead
#########################

# handle the endurance setting
endurance = False
if len(sys.argv) > 1 and sys.argv[1] == 'endurance':
	endurance = True
	del sys.argv[1]

# read in the created initial conditions
init.read_xml(filename="input.xml")

# specify Lennard-Jones interactions between particle pairs
lj = pair.lj(r_cut=3.0)
lj.pair_coeff.set('A', 'A', epsilon=1.0, sigma=1.0, alpha=1.0)
lj.pair_coeff.set('A', 'B', epsilon=1.0, sigma=1.0, alpha=0.0)
lj.pair_coeff.set('A', 'C', epsilon=1.0, sigma=1.0, alpha=0.0)
lj.pair_coeff.set('A', 'D', epsilon=1.0, sigma=1.0, alpha=0.0)

lj.pair_coeff.set('B', 'B', epsilon=1.0, sigma=1.0, alpha=1.0)
lj.pair_coeff.set('B', 'C', epsilon=1.0, sigma=1.0, alpha=0.0)
lj.pair_coeff.set('B', 'D', epsilon=1.0, sigma=1.0, alpha=0.0)

lj.pair_coeff.set('C', 'C', epsilon=1.0, sigma=1.0, alpha=1.0)
lj.pair_coeff.set('C', 'D', epsilon=1.0, sigma=1.0, alpha=0.0)

lj.pair_coeff.set('D', 'D', epsilon=1.0, sigma=1.0, alpha=1.0)

# wall force
lj_wall = wall.lj(r_cut=3.0);
lj_wall.set_coeff('A', epsilon=1.0, sigma=1.0, alpha=0.0)
lj_wall.set_coeff('B', epsilon=1.0, sigma=1.0, alpha=0.0)
lj_wall.set_coeff('C', epsilon=1.0, sigma=1.0, alpha=0.0)
lj_wall.set_coeff('D', epsilon=1.0, sigma=1.0, alpha=0.0)

# constant force
force.constant(fx=0.0, fy=-1.00, fz=0.0)

# integrate at constant temperature
all = group.all()
integrate.mode_standard(dt=0.005)
integrate.bdnvt(all, T=1.0)

# equilibrate
run(50000, profile=True)

# dump every 10k steps
mol2 = dump.mol2()
mol2.write(filename="dump.mol2");
dump.dcd(filename="dump.dcd", period=200000);

# log lj energy
analyze.log(filename="log.txt", quantities=['temperature', 'pressure', 'kinetic_energy', 'potential_energy', 'pair_lj_energy'], period=1000)

# calculate and log msd
groupA = group.type('A')
groupB = group.type('B')
groupC = group.type('C')
groupD = group.type('D')
analyze.msd(filename='msd.txt', groups=[groupA, groupB, groupC, groupD], period=10000)

# run for a a couple hours
run(1e9, limit_hours=2)

if endurance:
	# run for a few more hours
	run(1e9, limit_hours=22)
