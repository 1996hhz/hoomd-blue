# Suppressions for OpenMP
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   fun:calloc
   fun:_dl_allocate_tls
   fun:pthread_create@@GLIBC_2.2.5
   obj:/usr/lib64/libgomp.so.1.0.0
}


# Supressions for cudart
{
   <insert_a_suppression_name_here>
   Memcheck:Param
   ioctl(generic)
   fun:ioctl
}

{
   latest ld-2.9 supression for cudart loading
   Memcheck:Cond
   obj:/lib64/ld-2.9.so
   obj:/lib64/ld-2.9.so
   obj:/lib64/ld-2.9.so
   obj:/lib64/ld-2.9.so
   obj:/lib64/ld-2.9.so
}

{
   <insert a suppression name here>
   Memcheck:Addr8
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/libdl-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/libdl-2.8.so
   fun:dlopen
   obj:/opt/cuda/lib/libcudart.so.2.1
}

{
   <insert a suppression name here>
   Memcheck:Addr8
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/libdl-2.8.so
   obj:/lib64/ld-2.8.so
}

{
   <insert a suppression name here>
   Memcheck:Cond
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/libdl-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/libdl-2.8.so
   fun:dlopen
   obj:/opt/cuda/lib/libcudart.so.2.1
   obj:/opt/cuda/lib/libcudart.so.2.1
   fun:cudaGetDeviceCount
}

{
   <insert a suppression name here>
   Memcheck:Leak
   fun:calloc
   obj:/lib64/ld-2.8.so
   fun:_dl_allocate_tls
   fun:pthread_create@@GLIBC_2.2.5
   obj:/opt/cuda/lib/libcudart.so.2.1
   obj:/opt/cuda/lib/libcudart.so.2.1
   obj:/opt/cuda/lib/libcudart.so.2.1
   fun:cudaMallocHost
}

{
   <insert a suppression name here>
   Memcheck:Leak
   fun:calloc
   obj:/lib64/ld-2.8.so
   fun:_dl_allocate_tls
   fun:pthread_create@@GLIBC_2.2.5
   obj:/opt/cuda/lib/libcudart.so.2.1
   obj:/opt/cuda/lib/libcudart.so.2.1
   fun:cudaLaunch
}

{
   <insert a suppression name here>
   Memcheck:Cond
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/libdl-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/libdl-2.8.so
   fun:dlopen
   obj:/opt/cuda/lib/libcudart.so.2.1
   obj:/opt/cuda/lib/libcudart.so.2.1
   fun:cudaSetDevice
}

{
   <insert a suppression name here>
   Memcheck:Addr8
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/libdl-2.6.1.so
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/libdl-2.6.1.so
   fun:dlopen
   obj:/opt/cuda/lib/libcudart.so.1.1
}

{
   <insert a suppression name here>
   Memcheck:Addr8
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/libdl-2.6.1.so
   obj:/lib64/ld-2.6.1.so
}

{
   <insert a suppression name here>
   Memcheck:Leak
   fun:_Znwm
   obj:/opt/cuda/lib/libcudart.so.1.1
   obj:/opt/cuda/lib/libcudart.so.1.1
   obj:/opt/cuda/lib/libcudart.so.1.1
   fun:cudaMallocHost
   fun:_ZN12ParticleData8allocateEj
}

{
   <insert a suppression name here>
   Memcheck:Addr8
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/libdl-2.6.1.so
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/libdl-2.6.1.so
   fun:dlopen
   obj:/opt/cuda/lib/libcudart.so.2.0
}

{
   <insert a suppression name here>
   Memcheck:Param
   sigaltstack(ss)
   fun:sigaltstack
   fun:_ZN5boost6detail14signal_handlerD1Ev
   fun:_ZN5boost17execution_monitor13catch_signalsERKNS_9unit_test9callback0IiEE
   fun:_ZN5boost17execution_monitor7executeERKNS_9unit_test9callback0IiEE
   fun:_ZN5boost9unit_test9framework4initEPFPNS0_10test_suiteEiPPcEiS5_
   fun:_ZN5boost9unit_test14unit_test_mainEPFPNS0_10test_suiteEiPPcEiS4_
   fun:(below main)
}

{
   <insert a suppression name here>
   Memcheck:Leak
   fun:_Znwm
   obj:/opt/cuda/lib/libcudart.so.1.1
   obj:/opt/cuda/lib/libcudart.so.1.1
   obj:/opt/cuda/lib/libcudart.so.1.1
   fun:cudaMallocHost
}

# apparent boost issue?
{
   <insert a suppression name here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZNSspLEc
   fun:_ZN5boost10filesystem10basic_pathISsNS0_11path_traitsEE28m_append_separator_if_neededEv
   fun:_ZN5boost10filesystem10basic_pathISsNS0_11path_traitsEEdVEPKc
   fun:_ZN5boost10filesystem10basic_pathISsNS0_11path_traitsEEdVERKS3_
   fun:_ZN5boost10filesystemdvISsNS0_11path_traitsEEENS0_10basic_pathIT_T0_EERKS6_PKNS4_10value_typeE
}

{
   <insert a suppression name here>
   Memcheck:Leak
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEm
   fun:_ZNSs7reserveEm
   fun:_ZN5boost10filesystem10basic_pathISsNS0_11path_traitsEEdVEPKc
   fun:_ZN5boost10filesystemdvISsNS0_11path_traitsEEENS0_10basic_pathIT_T0_EERKS6_PKNS4_10value_typeE
}

{
   <insert a suppression name here>
   Memcheck:Addr8
   fun:__tcf_1
   fun:exit
   fun:(below main)
}

{
   <insert a suppression name here>
   Memcheck:Addr8
   fun:_ZN5boost9unit_test14framework_implD1Ev
   fun:exit
   fun:(below main)
}


{
   <insert a suppression name here>
   Memcheck:Addr4
   fun:_ZN5boost9unit_test14framework_implD1Ev
   fun:exit
   fun:(below main)
}

# python is not capable of freeing memory allocated by the boost python module init, ignore it all here
{
   ignoring python module init
   Memcheck:Leak
   ...
   fun:_Z17init_module_hoomdv
}

{
   <insert a suppression name here>
   Memcheck:Leak
   ...
   fun:Py_InitializeEx
   fun:main
}

# I have no idea what this is, but it appears to be coming from init_hoomd_module and valgrind just doesn't keep a long enough stack to track that
{
   <insert a suppression name here>
   Memcheck:Leak
   fun:_Znwm
}

{
   <insert a suppression name here>
   Memcheck:Leak
   fun:calloc
   obj:/lib64/libdl-2.8.so
   fun:dlopen
   fun:_PyImport_GetDynLoadFunc
   fun:_PyImport_LoadDynamicModule
   obj:/usr/lib64/libpython2.5.so.1.0
   obj:/usr/lib64/libpython2.5.so.1.0
   obj:/usr/lib64/libpython2.5.so.1.0
   fun:PyImport_ImportModuleLevel
   obj:/usr/lib64/libpython2.5.so.1.0
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}

{
   <insert a suppression name here>
   Memcheck:Leak
   fun:malloc
   obj:/usr/lib64/libpython2.5.so.1.0
   obj:/usr/lib64/libpython2.5.so.1.0
   obj:/usr/lib64/libpython2.5.so.1.0
   fun:PyObject_RichCompare
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   obj:/usr/lib64/libpython2.5.so.1.0
   fun:PyObject_Call
}

{
   <insert a suppression name here>
   Memcheck:Leak
   fun:malloc
   ...
   fun:dlopen
   fun:_PyImport_GetDynLoadFunc
}

{
   <insert a suppression name here>
   Memcheck:Leak
   fun:calloc
   ...
   fun:dlopen
   fun:_PyImport_GetDynLoadFunc
}

{
   <insert a suppression name here>
   Memcheck:Leak
   fun:realloc
   fun:_PyString_Resize
   fun:PyString_Format
   obj:/usr/lib64/libpython2.5.so.1.0
   obj:/usr/lib64/libpython2.5.so.1.0
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   obj:/usr/lib64/libpython2.5.so.1.0
   fun:PyObject_Call
   obj:/usr/lib64/libpython2.5.so.1.0
   fun:PyObject_Call
   obj:/usr/lib64/libpython2.5.so.1.0
}

{
   <insert a suppression name here>
   Memcheck:Leak
   fun:malloc
   obj:/usr/lib64/libpython2.5.so.1.0
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   obj:/usr/lib64/libpython2.5.so.1.0
   fun:PyObject_Call
}

{
   <insert a suppression name here>
   Memcheck:Leak
   fun:malloc
   fun:PyStructSequence_InitType
   fun:initposix
   obj:/usr/lib64/libpython2.5.so.1.0
   obj:/usr/lib64/libpython2.5.so.1.0
   obj:/usr/lib64/libpython2.5.so.1.0
   obj:/usr/lib64/libpython2.5.so.1.0
   obj:/usr/lib64/libpython2.5.so.1.0
   fun:PyImport_ImportModuleLevel
   obj:/usr/lib64/libpython2.5.so.1.0
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}

{
   <insert a suppression name here>
   Memcheck:Leak
   fun:malloc
   fun:realloc
   fun:PyImport_ExtendInittab
   fun:PyImport_AppendInittab
   fun:main
}

{
   <insert a suppression name here>
   Memcheck:Leak
   fun:malloc
   obj:/usr/lib64/libpython2.5.so.1.0
   obj:/usr/lib64/libpython2.5.so.1.0
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   obj:/usr/lib64/libpython2.5.so.1.0
   obj:/usr/lib64/libpython2.5.so.1.0
   obj:/usr/lib64/libpython2.5.so.1.0
}

{
   <insert a suppression name here>
   Memcheck:Leak
   fun:malloc
   fun:PyFloat_FromDouble
   obj:/usr/lib64/libpython2.5.so.1.0
   obj:/usr/lib64/libpython2.5.so.1.0
   obj:/usr/lib64/libpython2.5.so.1.0
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}

{
   <insert a suppression name here>
   Memcheck:Leak
   fun:malloc
   fun:PyString_FromStringAndSize
   obj:/usr/lib64/libpython2.5.so.1.0
   obj:/usr/lib64/libpython2.5.so.1.0
   obj:/usr/lib64/libpython2.5.so.1.0
   obj:/usr/lib64/libpython2.5.so.1.0
   obj:/usr/lib64/libpython2.5.so.1.0
   obj:/usr/lib64/libpython2.5.so.1.0
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
   obj:/usr/lib64/libpython2.5.so.1.0
   obj:/usr/lib64/libpython2.5.so.1.0
}

# more python supressions for ld-2.9
{
   <insert a suppression name here>
   Memcheck:Addr8
   obj:/lib64/ld-2.9.so
   obj:/lib64/ld-2.9.so
   obj:/lib64/ld-2.9.so
   obj:/lib64/ld-2.9.so
   obj:/lib64/ld-2.9.so
   obj:/lib64/ld-2.9.so
   obj:/lib64/ld-2.9.so
   obj:/lib64/libdl-2.9.so
   obj:/lib64/ld-2.9.so
   obj:/lib64/libdl-2.9.so
   fun:dlopen
   fun:_PyImport_GetDynLoadFunc
}

{
   <insert a suppression name here>
   Memcheck:Cond
   obj:/lib64/ld-2.9.so
   obj:/lib64/ld-2.9.so
   obj:/lib64/ld-2.9.so
   obj:/lib64/ld-2.9.so
   obj:/lib64/libdl-2.9.so
   obj:/lib64/ld-2.9.so
   obj:/lib64/libdl-2.9.so
   fun:dlopen
   fun:_PyImport_GetDynLoadFunc
   fun:_PyImport_LoadDynamicModule
   obj:/usr/lib64/libpython2.5.so.1.0
   obj:/usr/lib64/libpython2.5.so.1.0
}


# Python supressions file follows
#
# This is a valgrind suppression file that should be used when using valgrind.
#
#  Here's an example of running valgrind:
#
#	cd python/dist/src
#	valgrind --tool=memcheck --suppressions=Misc/valgrind-python.supp \
#		./python -E -tt ./Lib/test/regrtest.py -u bsddb,network
#
# You must edit Objects/obmalloc.c and uncomment Py_USING_MEMORY_DEBUGGER
# to use the preferred suppressions with Py_ADDRESS_IN_RANGE.
#
# If you do not want to recompile Python, you can uncomment
# suppressions for PyObject_Free and PyObject_Realloc.
#
# See Misc/README.valgrind for more information.

# all tool names: Addrcheck,Memcheck,cachegrind,helgrind,massif
{
   ADDRESS_IN_RANGE/Invalid read of size 4
   Memcheck:Addr4
   fun:Py_ADDRESS_IN_RANGE
}

{
   ADDRESS_IN_RANGE/Invalid read of size 4
   Memcheck:Value4
   fun:Py_ADDRESS_IN_RANGE
}

{
   ADDRESS_IN_RANGE/Invalid read of size 8 (x86_64 aka amd64)
   Memcheck:Value8
   fun:Py_ADDRESS_IN_RANGE
}

{
   ADDRESS_IN_RANGE/Conditional jump or move depends on uninitialised value
   Memcheck:Cond
   fun:Py_ADDRESS_IN_RANGE
}

#
# Leaks (including possible leaks)
#    Hmmm, I wonder if this masks some real leaks.  I think it does.
#    Will need to fix that.
#

{
   Handle PyMalloc confusing valgrind (possibly leaked)
   Memcheck:Leak
   fun:realloc
   fun:_PyObject_GC_Resize
#   fun:COMMENT_THIS_LINE_TO_DISABLE_LEAK_WARNING
}

{
   Handle PyMalloc confusing valgrind (possibly leaked)
   Memcheck:Leak
   fun:malloc
   fun:_PyObject_GC_New
#   fun:COMMENT_THIS_LINE_TO_DISABLE_LEAK_WARNING
}

{
   Handle PyMalloc confusing valgrind (possibly leaked)
   Memcheck:Leak
   fun:malloc
   fun:_PyObject_GC_NewVar
#   fun:COMMENT_THIS_LINE_TO_DISABLE_LEAK_WARNING
}

{
   Handle PyMalloc confusing valgrind (possibly leaked)
   Memcheck:Leak
   fun:malloc
   fun:_PyObject_GC_Malloc
#   fun:COMMENT_THIS_LINE_TO_DISABLE_LEAK_WARNING
}

#
# Non-python specific leaks
#

{
   Handle pthread issue (possibly leaked)
   Memcheck:Leak
   fun:calloc
   fun:allocate_dtv
   fun:_dl_allocate_tls_storage
   fun:_dl_allocate_tls
}

{
   Handle pthread issue (possibly leaked)
   Memcheck:Leak
   fun:memalign
   fun:_dl_allocate_tls_storage
   fun:_dl_allocate_tls
}

{
   ADDRESS_IN_RANGE/Invalid read of size 4
   Memcheck:Addr4
   fun:PyObject_Free
}

{
   ADDRESS_IN_RANGE/Invalid read of size 4
   Memcheck:Value4
   fun:PyObject_Free
}

{
   ADDRESS_IN_RANGE/Invalid read of size 8
   Memcheck:Value8
   fun:PyObject_Free
}

{
   ADDRESS_IN_RANGE/Conditional jump or move depends on uninitialised value
   Memcheck:Cond
   fun:PyObject_Free
}

{
   ADDRESS_IN_RANGE/Invalid read of size 4
   Memcheck:Addr4
   fun:PyObject_Realloc
}

{
   ADDRESS_IN_RANGE/Invalid read of size 4
   Memcheck:Value4
   fun:PyObject_Realloc
}

{
   ADDRESS_IN_RANGE/Invalid read of size 8
   Memcheck:Value8
   fun:PyObject_Realloc
}

{
   <insert a suppression name here>
   Memcheck:Cond
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
}

{
   <insert a suppression name here>
   Memcheck:Addr8
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/libdl-2.6.1.so
   obj:/lib64/ld-2.6.1.so
   obj:/lib64/libdl-2.6.1.so
   fun:dlopen
   fun:_PyImport_GetDynLoadFunc
}

{
   <insert a suppression name here>
   Memcheck:Addr8
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/libdl-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/libdl-2.8.so
   fun:dlopen
   fun:_PyImport_GetDynLoadFunc
}

{
   <insert a suppression name here>
   Memcheck:Cond
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/libdl-2.8.so
   obj:/lib64/ld-2.8.so
   obj:/lib64/libdl-2.8.so
   fun:dlopen
   fun:_PyImport_GetDynLoadFunc
   fun:_PyImport_LoadDynamicModule
   obj:/usr/lib64/libpython2.5.so.1.0
   obj:/usr/lib64/libpython2.5.so.1.0
}


{
   ADDRESS_IN_RANGE/Conditional jump or move depends on uninitialised value
   Memcheck:Cond
   fun:PyObject_Realloc
}

###
### All the suppressions below are for errors that occur within libraries
### that Python uses.  The problems to not appear to be related to Python's
### use of the libraries.
###

{
   Generic ubuntu ld problems
   Memcheck:Addr8
   obj:/lib/ld-2.4.so
   obj:/lib/ld-2.4.so
   obj:/lib/ld-2.4.so
   obj:/lib/ld-2.4.so
}

{
   Generic gentoo ld problems
   Memcheck:Cond
   obj:/lib/ld-2.3.4.so
   obj:/lib/ld-2.3.4.so
   obj:/lib/ld-2.3.4.so
   obj:/lib/ld-2.3.4.so
}

{
   DBM problems, see test_dbm
   Memcheck:Param
   write(buf)
   fun:write
   obj:/usr/lib/libdb1.so.2
   obj:/usr/lib/libdb1.so.2
   obj:/usr/lib/libdb1.so.2
   obj:/usr/lib/libdb1.so.2
   fun:dbm_close
}

{
   DBM problems, see test_dbm
   Memcheck:Value8
   fun:memmove
   obj:/usr/lib/libdb1.so.2
   obj:/usr/lib/libdb1.so.2
   obj:/usr/lib/libdb1.so.2
   obj:/usr/lib/libdb1.so.2
   fun:dbm_store
   fun:dbm_ass_sub
}

{
   DBM problems, see test_dbm
   Memcheck:Cond
   obj:/usr/lib/libdb1.so.2
   obj:/usr/lib/libdb1.so.2
   obj:/usr/lib/libdb1.so.2
   fun:dbm_store
   fun:dbm_ass_sub
}

{
   DBM problems, see test_dbm
   Memcheck:Cond
   fun:memmove
   obj:/usr/lib/libdb1.so.2
   obj:/usr/lib/libdb1.so.2
   obj:/usr/lib/libdb1.so.2
   obj:/usr/lib/libdb1.so.2
   fun:dbm_store
   fun:dbm_ass_sub
}

{
   GDBM problems, see test_gdbm
   Memcheck:Param
   write(buf)
   fun:write
   fun:gdbm_open

}

{
   ZLIB problems, see test_gzip
   Memcheck:Cond
   obj:/lib/libz.so.1.2.3
   obj:/lib/libz.so.1.2.3
   fun:deflate
}

{
   Avoid problems w/readline doing a putenv and leaking on exit
   Memcheck:Leak
   fun:malloc
   fun:xmalloc
   fun:sh_set_lines_and_columns
   fun:_rl_get_screen_size
   fun:_rl_init_terminal_io
   obj:/lib/libreadline.so.4.3
   fun:rl_initialize
}

###
### These occur from somewhere within the SSL, when running
###  test_socket_sll.  They are too general to leave on by default.
###
###{
###   somewhere in SSL stuff
###   Memcheck:Cond
###   fun:memset
###}
###{
###   somewhere in SSL stuff
###   Memcheck:Value4
###   fun:memset
###}
###
###{
###   somewhere in SSL stuff
###   Memcheck:Cond
###   fun:MD5_Update
###}
###
###{
###   somewhere in SSL stuff
###   Memcheck:Value4
###   fun:MD5_Update
###}

#
# All of these problems come from using test_socket_ssl
#
{
   from test_socket_ssl
   Memcheck:Cond
   fun:BN_bin2bn
}

{
   from test_socket_ssl
   Memcheck:Cond
   fun:BN_num_bits_word
}

{
   from test_socket_ssl
   Memcheck:Value4
   fun:BN_num_bits_word
}

{
   from test_socket_ssl
   Memcheck:Cond
   fun:BN_mod_exp_mont_word
}

{
   from test_socket_ssl
   Memcheck:Cond
   fun:BN_mod_exp_mont
}

{
   from test_socket_ssl
   Memcheck:Param
   write(buf)
   fun:write
   obj:/usr/lib/libcrypto.so.0.9.7
}

{
   from test_socket_ssl
   Memcheck:Cond
   fun:RSA_verify
}

{
   from test_socket_ssl
   Memcheck:Value4
   fun:RSA_verify
}

{
   from test_socket_ssl
   Memcheck:Value4
   fun:DES_set_key_unchecked
}

{
   from test_socket_ssl
   Memcheck:Value4
   fun:DES_encrypt2
}

{
   from test_socket_ssl
   Memcheck:Cond
   obj:/usr/lib/libssl.so.0.9.7
}

{
   from test_socket_ssl
   Memcheck:Value4
   obj:/usr/lib/libssl.so.0.9.7
}

{
   from test_socket_ssl
   Memcheck:Cond
   fun:BUF_MEM_grow_clean
}

{
   from test_socket_ssl
   Memcheck:Cond
   fun:memcpy
   fun:ssl3_read_bytes
}

{
   from test_socket_ssl
   Memcheck:Cond
   fun:SHA1_Update
}

{
   from test_socket_ssl
   Memcheck:Value4
   fun:SHA1_Update
}

